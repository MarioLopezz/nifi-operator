apiVersion: v1
kind: Service
metadata:
  name: nifi-hs
  labels:
    app: nifi
spec:
  ports:
  - protocol: TCP
    port: 8081
    targetPort: 8081
    name: nifi-listen-http
  - protocol: TCP
    port: 10443
    targetPort: 10443
    name: site-protocol
  - protocol: TCP
    port: 11443
    targetPort: 11443
    name: node-protocol
  clusterIP: None
  selector:
    app: nifi
---
apiVersion: v1
kind: Service
metadata:
  name: nifi-svc
spec:
  type: ClusterIP
  selector:
    app: nifi
  ports:
  - port: 8443
    targetPort: 8443
    name: https
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nifi
  labels:
    name: nifi
    app: nifi
spec:
  selector:
    matchLabels:
      app: nifi
  serviceName: nifi-hs
  replicas: 1
  template:
    metadata:
      labels:
        app: nifi
    spec:
      restartPolicy: Always
      containers:
      - name: nifi
        image: kubernetesbigdataeg/nifi:1.27.0-2
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: "8Gi"  
          requests:
            cpu: "1"  
            memory: "8Gi"
        ports:
        - containerPort: 8080
          name: http        
        - containerPort: 8081
          name: listen-http
        - containerPort: 8443
          name: https
        - containerPort: 10443
          name: site-protocol
        - containerPort: 11443
          name: node-protocol
        - containerPort: 9092
          name: exporter-port
        livenessProbe:
          initialDelaySeconds: 240
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
            - bash
            - -c
            - |
              if [[ -n $NIFI_WEB_HTTPS_HOST ]]; then
                TOKEN=$(curl -k -X POST -H "Content-Type: application/x-www-form-urlencoded; charset=UTF-8" -d "username=$SINGLE_USER_CREDENTIALS_USERNAME&password=$SINGLE_USER_CREDENTIALS_PASSWORD" https://$NIFI_WEB_HTTPS_HOST:$NIFI_WEB_HTTPS_PORT/nifi-api/access/token)
                STATUS=$(curl -k -H "Authorization: Bearer $TOKEN" https://$NIFI_WEB_HTTPS_HOST:$NIFI_WEB_HTTPS_PORT/nifi-api/controller/cluster | jq -r ".cluster.nodes[] | select(.address==\"$(hostname -f)\") | .status")
              else
                STATUS=$(curl -s http://$NIFI_WEB_HTTPS_HOST:$NIFI_WEB_HTTPS_PORT/nifi-api/controller/cluster | jq -r ".cluster.nodes[] | select(.address==\"$(hostname -f)\") | .status")
              fi

              if [[ $STATUS != "CONNECTED" ]]; then
                echo "Node not found with CONNECTED state."
                exit 1
              fi
        env:
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NIFI_ZK_CONNECT_STRING
            value: "zookeeper-0.zookeeper-hs.default.svc.cluster.local:2181"
          - name: ZK_MONITOR_PORT
            value: "2888"
          - name: NIFI_JVM_HEAP_INIT
            value: "8g"
          - name: NIFI_JVM_HEAP_MAX
            value: "8g"
          - name: NIFI_SECURITY_USER_LOGIN_IDENTITY_PROVIDER
            value: "single-user-provider"     
          - name: NIFI_CLUSTER_ADDRESS
            value: $(HOSTNAME).nifi-hs.default.svc.cluster.local
          - name: NIFI_WEB_HTTPS_HOST
            value: $(HOSTNAME).nifi-hs.default.svc.cluster.local
          - name: NIFI_WEB_HTTPS_PORT
            value: "8443"
          - name: NIFI_WEB_PROXY_HOST
            value: ""
          - name: NIFI_CLUSTER_IS_NODE
            value: "true"
          - name: NIFI_FLOW_CONFIGURATION_FILE
            value: "./conf/persistent/flow.xml.gz"
          - name: NIFI_FLOW_CONFIGURATION_JSON_FILE
            value: "./conf/persistent/flow.json.gz"
          - name: NIFI_TEMPLATES_DIRECTORY
            value: "./conf/persistent/templates"
          - name: NIFI_PROVENANCE_REPOSITORY_MAX_STORAGE_SIZE
            value: "4 GB"
          - name: NIFI_ANALYTICS_PREDICT_ENABLED
            value: "true"
          - name: NIFI_ELECTION_MAX_CANDIDATES
            value: "1"
          - name: NIFI_ELECTION_MAX_WAIT
            value: "20 sec"
          - name: NIFI_CLUSTER_NODE_PROTOCOL_PORT
            value: "11443"
        envFrom:
          - secretRef:
              name: nifi-secret
        volumeMounts:
          - name: data
            mountPath: /opt/nifi/nifi-current/conf/persistent
            subPath: conf
          - name: data
            mountPath: /opt/nifi/nifi-current/flowfile_repository
            subPath: flowfile_repository
          - name: data
            mountPath: /opt/nifi/nifi-current/content_repository
            subPath: content_repository
          - name: data
            mountPath: /opt/nifi/nifi-current/database_repository
            subPath: database_repository
          - name: data
            mountPath: /opt/nifi/nifi-current/provenance_repository
            subPath: provenance_repository
          - name: data
            mountPath: /opt/nifi/nifi-current/state
            subPath: state
          - name: nifi-config-volume
            mountPath: /etc/environments          
      volumes:
      - name: nifi-config-volume
        configMap:
          name: nifi-config
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: nifi-secret
  labels:
    app: nifi
type: Opaque
stringData:
  SINGLE_USER_CREDENTIALS_USERNAME: admin
  SINGLE_USER_CREDENTIALS_PASSWORD: admin1234567
  NIFI_SENSITIVE_PROPS_KEY: "randomstring12charsmin"